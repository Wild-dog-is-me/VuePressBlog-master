{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{305:function(a,s,t){\"use strict\";t.r(s);var n=t(10),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[s(\"p\",[a._v(\"单个的 RabbitMQ 肯定无法实现高可用，要想高可用，还得上集群。\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"两种模式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#两种模式\"}},[a._v(\"#\")]),a._v(\" 两种模式\")]),a._v(\" \"),s(\"p\",[a._v(\"说到集群，小伙伴们可能第一个问题是，如果我有一个 RabbitMQ 集群，那么是不是我的消息集群中的每一个实例都保存一份呢？\")]),a._v(\" \"),s(\"p\",[a._v(\"这其实就涉及到 RabbitMQ 集群的两种模式：\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"普通集群\")]),a._v(\" \"),s(\"li\",[a._v(\"镜像集群\")])]),a._v(\" \"),s(\"h4\",{attrs:{id:\"普通集群\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#普通集群\"}},[a._v(\"#\")]),a._v(\" 普通集群\")]),a._v(\" \"),s(\"p\",[a._v(\"普通集群模式，就是将 RabbitMQ 部署到多台服务器上，每个服务器启动一个 RabbitMQ 实例，多个实例之间进行消息通信。\")]),a._v(\" \"),s(\"p\",[a._v(\"此时我们创建的队列 Queue，它的元数据（主要就是 Queue 的一些配置信息）会在所有的 RabbitMQ 实例中进行同步，但是队列中的消息只会存在于一个 RabbitMQ 实例上，而不会同步到其他队列。\")]),a._v(\" \"),s(\"p\",[a._v(\"当我们消费消息的时候，如果连接到了另外一个实例，那么那个实例会通过元数据定位到 Queue 所在的位置，然后访问 Queue 所在的实例，拉取数据过来发送给消费者。\")]),a._v(\" \"),s(\"p\",[a._v(\"这种集群可以提高 RabbitMQ 的消息吞吐能力，但是无法保证高可用，因为一旦一个 RabbitMQ 实例挂了，消息就没法访问了，如果消息队列做了持久化，那么等 RabbitMQ 实例恢复后，就可以继续访问了；如果消息队列没做持久化，那么消息就丢了。\")]),a._v(\" \"),s(\"p\",[a._v(\"大致的流程图如下图：\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/6245651827f86abb2a3fa367.png\",alt:\"图片\"}})]),a._v(\" \"),s(\"h4\",{attrs:{id:\"镜像集群\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#镜像集群\"}},[a._v(\"#\")]),a._v(\" 镜像集群\")]),a._v(\" \"),s(\"p\",[a._v(\"它和普通集群最大的区别在于 Queue 数据和原数据不再是单独存储在一台机器上，而是同时存储在多台机器上。也就是说每个 RabbitMQ 实例都有一份镜像数据（副本数据）。每次写入消息的时候都会自动把数据同步到多台实例上去，这样一旦其中一台机器发生故障，其他机器还有一份副本数据可以继续提供服务，也就实现了高可用。\")]),a._v(\" \"),s(\"p\",[a._v(\"大致流程图如下图：\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/6245652927f86abb2a3fc061.png\",alt:\"图片\"}})]),a._v(\" \"),s(\"h4\",{attrs:{id:\"节点类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#节点类型\"}},[a._v(\"#\")]),a._v(\" 节点类型\")]),a._v(\" \"),s(\"p\",[a._v(\"RabbitMQ 中的节点类型有两种：\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v(\"RAM node：内存节点将所有的队列、交换机、绑定、用户、权限和 vhost 的元数据定义存储在内存中，好处是可以使得交换机和队列声明等操作速度更快。\")]),a._v(\" \"),s(\"li\",[a._v(\"Disk node：将元数据存储在磁盘中，单节点系统只允许磁盘类型的节点，防止重启 RabbitMQ 的时候，丢失系统的配置信息\")])]),a._v(\" \"),s(\"p\",[a._v(\"RabbitMQ 要求在集群中至少有一个磁盘节点，所有其他节点可以是内存节点，当节点加入或者离开集群时，必须要将该变更通知到至少一个磁盘节点。如果集群中唯一的一个磁盘节点崩溃的话，集群仍然可以保持运行，但是无法进行其他操作（增删改查），直到节点恢复。为了确保集群信息的可靠性，或者在不确定使用磁盘节点还是内存节点的时候，建议直接用磁盘节点。\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"搭建普通集群\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#搭建普通集群\"}},[a._v(\"#\")]),a._v(\" 搭建普通集群\")]),a._v(\" \"),s(\"p\",[a._v(\"大致的结构了解了，接下来我们就把集群给搭建起来。先从普通集群开始，我们就使用 docker 来搭建。\")]),a._v(\" \"),s(\"p\",[a._v(\"搭建之前，有两个预备知识需要大家了解：\")]),a._v(\" \"),s(\"ol\",[s(\"li\",[a._v(\"搭建集群时，节点中的 Erlang Cookie 值要一致，默认情况下，文件在 /var/lib/rabbitmq/.erlang.cookie，我们在用 docker 创建 RabbitMQ 容器时，可以为之设置相应的 Cookie 值。\")]),a._v(\" \"),s(\"li\",[a._v(\"RabbitMQ 是通过主机名来连接服务，必须保证各个主机名之间可以 ping 通。可以通过编辑 /etc/hosts 来手工添加主机名和 IP 对应关系。如果主机名 ping 不通，RabbitMQ 服务启动会失败（如果我们是在不同的服务器上搭建 RabbitMQ 集群，大家需要注意这一点，接下来我们将通过 Docker 的容器连接 link 来实现容器之间的访问，略有不同）。\")])]),a._v(\" \"),s(\"h4\",{attrs:{id:\"开始搭建\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#开始搭建\"}},[a._v(\"#\")]),a._v(\" 开始搭建\")]),a._v(\" \"),s(\"p\",[a._v(\"执行如下命令创建三个rabbitmq容器\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"docker\")]),a._v(\" run -d --hostname rabbit01 --name mq01 -p \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"5671\")]),a._v(\":5672 -p \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"15671\")]),a._v(\":15672 -e \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[a._v(\"RABBITMQ_ERLANG_COOKIE\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"javaboy_rabbitmq_cookie\"')]),a._v(\" rabbitmq:3-management\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"docker\")]),a._v(\" run -d --hostname rabbit02 --name mq02 --link mq01:mylink01 -p \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"5672\")]),a._v(\":5672 -p \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"15672\")]),a._v(\":15672 -e \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[a._v(\"RABBITMQ_ERLANG_COOKIE\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"javaboy_rabbitmq_cookie\"')]),a._v(\" rabbitmq:3-management\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"docker\")]),a._v(\" run -d --hostname rabbit03 --name mq03 --link mq01:mylink02 --link mq02:mylink03 -p \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"5673\")]),a._v(\":5672 -p \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"15673\")]),a._v(\":15672 -e \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[a._v(\"RABBITMQ_ERLANG_COOKIE\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"javaboy_rabbitmq_cookie\"')]),a._v(\" rabbitmq:3-management\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\")])]),s(\"p\",[a._v(\"运行结果如下\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edc9408c61dc3b8e1960d3.png\",alt:\"image-20220806095159632\"}})]),a._v(\" \"),s(\"p\",[a._v(\"三个节点现在就启动好了，注意在 mq02 和 mq03 中，分别使用了 \"),s(\"code\",[a._v(\"--link\")]),a._v(\" 参数来实现容器连接\")]),a._v(\" \"),s(\"p\",[a._v(\"接下来进入到 mq02 容器中，首先查看一下 hosts 文件，可以看到我们配置的容器连接已经生效了：\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edc9a78c61dc3b8e1a9aa2.png\",alt:\"image-20220806095342578\"}})]),a._v(\" \"),s(\"p\",[a._v(\"将来在 mq02 容器中，就可以通过 mylink01 或者 rabbit01 访问到 mq01 容器了。\")]),a._v(\" \"),s(\"p\",[a._v(\"接下来我们开始集群的配置。\")]),a._v(\" \"),s(\"p\",[a._v(\"分别执行如下命令将 mq02 容器加入集群中：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[a._v(\"rabbitmqctl stop_app\\nrabbitmqctl join_cluster rabbit@rabbit01\\nrabbitmqctl start_app\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\")])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edc9fc8c61dc3b8e1ba706.png\",alt:\"image-20220806095508177\"}})]),a._v(\" \"),s(\"p\",[a._v(\"接下来输入如下命令我们可以查看集群的状态：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[a._v(\"rabbitmqctl cluster_status\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edca4b8c61dc3b8e1c922f.png\",alt:\"image-20220806095626749\"}})]),a._v(\" \"),s(\"p\",[a._v(\"可以看到，集群中已经有两个节点了。\")]),a._v(\" \"),s(\"p\",[a._v(\"接下来通过相同的方式将 mq03 也加入到集群中：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[a._v(\"rabbitmqctl stop_app\\nrabbitmqctl join_cluster rabbit@rabbit01\\nrabbitmqctl start_app\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\")])]),s(\"p\",[a._v(\"然后查看集群信息\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[a._v(\"rabbitmqctl cluster_status\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edcabe8c61dc3b8e1e02ee.png\",alt:\"image-20220806095821318\"}})]),a._v(\" \"),s(\"p\",[a._v(\"可以看到，这时候已经有三个节点了\")]),a._v(\" \"),s(\"p\",[a._v(\"在网页端也可以来查看集群信息。\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edcdf08c61dc3b8e287543.png\",alt:\"image-20220806101159607\"}})]),a._v(\" \"),s(\"h4\",{attrs:{id:\"代码测试\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码测试\"}},[a._v(\"#\")]),a._v(\" 代码测试\")]),a._v(\" \"),s(\"p\",[a._v(\"集群配置\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-properties line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-properties\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token key attr-name\"}},[a._v(\"spring.rabbitmq.addresses\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token value attr-value\"}},[a._v(\"localhost:5671,localhost:5672,localhost:5673\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token key attr-name\"}},[a._v(\"spring.rabbitmq.username\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token value attr-value\"}},[a._v(\"guest\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token key attr-name\"}},[a._v(\"spring.rabbitmq.password\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token value attr-value\"}},[a._v(\"guest\")]),a._v(\"\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\")])]),s(\"p\",[a._v(\"提供一个简单的队列\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-java line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Configuration\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"class\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"RabbitConfig\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"static\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"final\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"String\")]),a._v(\" MY_QUEUE_NAME \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"my_queue_name\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"static\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"final\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"String\")]),a._v(\" MY_EXCHANGE_NAME \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"my_exchange_name\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"static\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"final\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"String\")]),a._v(\" MY_ROUTING_KEY \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"my_queue_name\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Bean\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Queue\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"queue\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"return\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"new\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Queue\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"MY_QUEUE_NAME\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[a._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[a._v(\"false\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[a._v(\"false\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Bean\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"DirectExchange\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"directExchange\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"return\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"new\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"DirectExchange\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"MY_EXCHANGE_NAME\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[a._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[a._v(\"false\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Bean\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"Binding\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"binding\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"return\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"BindingBuilder\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bind\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"queue\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"to\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"directExchange\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"with\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"MY_ROUTING_KEY\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"12\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"13\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"14\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"15\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"16\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"17\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"18\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"19\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"20\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"21\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"22\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"23\")]),s(\"br\")])]),s(\"p\",[a._v(\"在单元测试中进行消息发送测试：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-java line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@SpringBootTest\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"class\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"ProviderApplicationTests\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Autowired\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"RabbitTemplate\")]),a._v(\" rabbitTemplate\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Test\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"void\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"contextLoads\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        rabbitTemplate\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"convertAndSend\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"null\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"RabbitConfig\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"MY_QUEUE_NAME\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"hello 江南一点雨\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"10\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"11\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"12\")]),s(\"br\")])]),s(\"p\",[a._v(\"这条消息发送成功之后，在 RabbitMQ 的 Web 管理端，我们会看到三个 RabbitMQ 实例上都会显示有一条消息，但是实际上消息本身只存在于一个 RabbitMQ 实例。\")]),a._v(\" \"),s(\"p\",[a._v(\"接下来我们再创建一个消息消费者，消息消费者的依赖以及配置和消息生产者都是一模一样，我就不重复了，消息消费者中增加一个消息接收器：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-java line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@Component\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"class\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"MsgReceiver\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[a._v(\"@RabbitListener\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"queues \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"RabbitConfig\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"MY_QUEUE_NAME\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"public\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"void\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"handleMsg\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"String\")]),a._v(\" msg\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"{\")]),a._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[a._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"msg = \"')]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"+\")]),a._v(\" msg\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"}\")]),a._v(\"\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"8\")]),s(\"br\")])]),s(\"p\",[a._v(\"当消息消费者启动成功后，这个方法中只收到一条消息，进一步验证了我们搭建的 RabbitMQ 集群是没问题的。\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"反向测试\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#反向测试\"}},[a._v(\"#\")]),a._v(\" 反向测试\")]),a._v(\" \"),s(\"p\",[a._v(\"再举两个反例，以证明消息并没有同步到其他 RabbitMQ 实例。\")]),a._v(\" \"),s(\"p\",[a._v(\"确保三个 RabbitMQ 实例都是启动状态，关闭掉 Consumer，然后通过 provider 发送一条消息，发送成功之后，关闭 mq01 实例，然后启动 Consumer 实例，此时 Consumer 实例并不会消费消息，反而会报错说 mq01 实例连接不上，这个例子就可以说明消息在 mq01 上，并没有同步到另外两个 MQ 上。相反，如果 provider 发送消息成功之后，我们没有关闭 mq01 实例而是关闭了 mq02 实例，那么你就会发现消息的消费不受影响。\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"搭建镜像集群\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#搭建镜像集群\"}},[a._v(\"#\")]),a._v(\" 搭建镜像集群\")]),a._v(\" \"),s(\"p\",[a._v(\"所谓的镜像集群模式并不需要额外搭建，只需要我们将队列配置为镜像队列即可。\")]),a._v(\" \"),s(\"p\",[a._v(\"这个配置可以通过网页配置，也可以通过命令行配置，我们分别来看。\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"网页配置镜像队列\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网页配置镜像队列\"}},[a._v(\"#\")]),a._v(\" 网页配置镜像队列\")]),a._v(\" \"),s(\"p\",[a._v(\"先来看看网页上如何配置镜像队列。\")]),a._v(\" \"),s(\"p\",[a._v(\"点击 Admin 选项卡，然后点击右边的 Policies，再点击 \"),s(\"code\",[a._v(\"Add/update a policy\")]),a._v(\"，如下图：\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edfa7b8c61dc3b8ed48b47.png\",alt:\"图片\"}})]),a._v(\" \"),s(\"p\",[a._v(\"接下来添加一个策略，如下图：\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edfa878c61dc3b8ed4b941.png\",alt:\"图片\"}})]),a._v(\" \"),s(\"p\",[a._v(\"各参数含义如下：\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[a._v(\"Name: policy 的名称。\")])]),a._v(\" \"),s(\"li\",[s(\"p\",[a._v(\"Pattern: queue 的匹配模式(正则表达式)。\")])]),a._v(\" \"),s(\"li\",[s(\"p\",[a._v(\"Definition：镜像定义，主要有三个参数：ha-mode, ha-params, ha-sync-mode。\")])]),a._v(\" \"),s(\"li\",[s(\"ul\",[s(\"li\",[a._v(\"ha-mode：指明镜像队列的模式，有效值为 all、exactly、nodes。其中 all 表示在集群中所有的节点上进行镜像（默认即此）；exactly 表示在指定个数的节点上进行镜像，节点的个数由 ha-params 指定；nodes 表示在指定的节点上进行镜像，节点名称通过 ha-params 指定。\")])])]),a._v(\" \"),s(\"li\",[s(\"p\",[a._v(\"ha-params：ha-mode 模式需要用到的参数。\")])]),a._v(\" \"),s(\"li\",[s(\"p\",[a._v(\"ha-sync-mode：进行队列中消息的同步方式，有效值为 automatic 和 manual。\")])]),a._v(\" \"),s(\"li\",[s(\"p\",[a._v(\"priority 为可选参数，表示 policy 的优先级。\")])])]),a._v(\" \"),s(\"p\",[a._v(\"配置完成后，点击下面的 \"),s(\"code\",[a._v(\"add/update policy\")]),a._v(\" 按钮，完成策略的添加，如下：\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://pic.imgdb.cn/item/62edfa998c61dc3b8ed50d1e.png\",alt:\"图片\"}})]),a._v(\" \"),s(\"p\",[a._v(\"添加完成后，我们可以进行一个简单的测试。\")]),a._v(\" \"),s(\"p\",[a._v(\"首先确认三个 RabbitMQ 都启动了，然后用上面的 provider 向消息队列发送一条消息。\")]),a._v(\" \"),s(\"p\",[a._v(\"发完之后关闭 mq01 实例。\")]),a._v(\" \"),s(\"p\",[a._v(\"接下来启动 consumer，此时发现 consumer 可以完成消息的消费（注意和前面的反向测试区分），这就说明镜像队列已经搭建成功了。\")])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}